{"version":3,"sources":["theme.scss","components/RangeCalendar/RangeCalendar.module.scss","index.scss","widgets/ChartsWidget/Recharts.scss","components/Tabs/Tabs.module.scss","widgets/ChartsWidget/components/ChartLegend.module.scss","components/Text/Text.module.scss","components/Text/Text.tsx","components/DashboardTitle/DashboardTitle.tsx","widgets/ChartsWidget/ChartsWidget.tsx","components/HeaderBar/HeaderBar.tsx","components/NavigationBar/NavigationBar.tsx","hooks/useNavigationPath.ts","components/HighlightStack/HighlightStack.tsx","components/HighlightStack/HighlightStackItem.tsx","widgets/AlertsWidget/AlertsWidget.tsx","components/Tabs/Tabs.tsx","components/Tabs/Tab.tsx","components/Tabs/TabPanel.tsx","widgets/ChartsWidget/components/Chart.tsx","components/RangeCalendar/RangeCalendar.tsx","widgets/ChartsWidget/components/ChartLegend.tsx","api/types.ts","widgets/InsightsWidget/InsightsWidget.tsx","state/widgets/actions.ts","api/index.ts","state/widgets/reducer.ts","widgets/ResourcesWidget/ResourcesWidget.tsx","state/widgets/asyncActions.ts","App.tsx","state/chart/actions.ts","state/chart/reducer.ts","state/reducer.ts","index.tsx","state/index.ts","App.module.scss","components/HighlightStack/HighlightStackItem.module.scss","components/DashboardTitle/DashboardTitle.module.scss","components/HeaderBar/HeaderBar.module.scss","components/NavigationBar/NavigationBar.module.scss","components/HighlightStack/HighlightStack.module.scss"],"names":["module","exports","TextColor","TextSize","memo","children","className","styles","root","icon","faExclamationCircle","color","title","TabId","link","href","uppercase","size","iconRight","classes","clsx","small","primary","secondary","accent","content","rightSideContent","faChevronDown","userIcon","faUserCircle","messages","defineMessage","awsConsole","id","defaultMessage","configuration","items","label","intl","useIntl","map","item","index","arr","key","length","crumbSeparator","links","faExternalLinkAlt","formatMessage","faCog","left","faSortDown","itemsContainer","description","iconType","date","percentage","style","background","theme","white","leftSide","rightSide","titleContainer","formatDistanceToNow","cards","subtitle","Date","card","faExclamationTriangle","tabs","isSelected","onClick","handleClick","useCallback","tab","selectedTab","tabContent","tabContentHeader","tabPanel","renderBrushTraveller","x","y","travellerHeight","height","radius","d","fill","primaryColor","formatDateTick","tick","getHours","Chart","data","brushDataKey","areaDataKey","barDataKey","barDataKey2","width","space","margin","right","syncId","dataKey","startIndex","endIndex","stroke","travellerWidth","traveller","alwaysShowText","padding","top","type","tickSize","axisLine","tickFormatter","bottom","unit","x1","y1","x2","y2","offset","stopColor","stopOpacity","barSize","pendingIncreased","pendingResolved","alerts","insights","configChange","legendItem","avgResponseDelayTitle","lastQueueSizeTitle","avgPayloadSizeTitle","deadLetterQueueTitle","n","i","Math","floor","random","value1","value2","push","now","dataGenerator","RequestState","console","log","useState","lastQueueSize","selectedTabId","setSelectedTabId","avgResponseDelay","faClock","faWaveSquare","avgPayloadSize","faDatabase","deadLetterQueue","faFile","faLightbulb","fetchResourcesDataAsyncAction","createAsyncAction","fetchInsightsDataAsyncAction","fetchAlertsDataAsyncAction","request","method","path","url","homepage","params","headers","Accept","fetch","rawResponse","json","response","ok","get","this","fetchQueueSizeHistory","fetchResourcesHistory","fetchAlertsHistory","fetchInsightsHistory","initialState","resourceHistory","insightsHistory","alertsHistory","resourceHistoryRequestState","unset","insightsHistoryRequestState","alertsHistoryRequestState","dispatch","useDispatch","useEffect","a","api","res","success","failure","faTable","App","data-testid","space3","space2","space1","widgets","fetchQueueSizeHistoryAsyncAction","queueSizeHistory","queueSizeHistoryRequestState","combineReducers","chart","state","action","getType","waiting","store","middleware","createLogger","thunkMiddleware","createStore","rootReducer","applyMiddleware","configureStore","ReactDOM","render","StrictMode","locale","document","getElementById"],"mappings":"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","file":"static/js/main.f5903f12.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"space\":\"8\",\"white\":\"#fff\",\"primaryColor\":\"#4c44c5\",\"textColorPrimary\":\"#202225\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"space\":\"8\",\"white\":\"#fff\",\"primaryColor\":\"#4c44c5\",\"textColorPrimary\":\"#202225\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"space\":\"8\",\"white\":\"#fff\",\"primaryColor\":\"#4c44c5\",\"textColorPrimary\":\"#202225\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"space\":\"8\",\"white\":\"#fff\",\"primaryColor\":\"#4c44c5\",\"textColorPrimary\":\"#202225\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"space\":\"8\",\"white\":\"#fff\",\"primaryColor\":\"#4c44c5\",\"textColorPrimary\":\"#202225\",\"tabs\":\"Tabs_tabs__mNPqW\",\"tab\":\"Tabs_tab__28Mkm\",\"selectedTab\":\"Tabs_selectedTab__f1vdP\",\"tabContent\":\"Tabs_tabContent__2FZkX\",\"tabContentHeader\":\"Tabs_tabContentHeader__1V80p\",\"tabPanel\":\"Tabs_tabPanel__322Af\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"space\":\"8\",\"white\":\"#fff\",\"primaryColor\":\"#4c44c5\",\"textColorPrimary\":\"#202225\",\"root\":\"ChartLegend_root__2cVUY\",\"leftSide\":\"ChartLegend_leftSide__1yhE3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"space\":\"8\",\"white\":\"#fff\",\"primaryColor\":\"#4c44c5\",\"textColorPrimary\":\"#202225\",\"root\":\"Text_root__3JPFE\",\"uppercase\":\"Text_uppercase__2o0RV\",\"primary\":\"Text_primary__1wkT9\",\"secondary\":\"Text_secondary__1BSS_\",\"accent\":\"Text_accent__1IMFR\",\"iconRight\":\"Text_iconRight__2C0uF\",\"small\":\"Text_small__2vGLW\"};","import React, { memo } from 'react';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport clsx from 'clsx';\n\nimport styles from './Text.module.scss';\n\nexport enum TextColor {\n  primary = 'primary',\n  secondary = 'secondary',\n  accent = 'accent',\n}\n\nexport enum TextSize {\n  small = 'small',\n}\n\ninterface TextProps {\n  children: React.ReactNode;\n  color?: TextColor;\n  size?: TextSize;\n  uppercase?: boolean;\n  link?: boolean;\n  href?: string;\n  iconRight?: IconProp;\n  className?: string;\n}\n\nconst Text: React.FC<TextProps> = ({\n  link,\n  href,\n  uppercase,\n  color,\n  size,\n  iconRight,\n  children,\n  className,\n}) => {\n  const classes = clsx(styles.root, className, {\n    [styles.small]: size === TextSize.small,\n    [styles.uppercase]: uppercase,\n    [styles.primary]: color === TextColor.primary,\n    [styles.secondary]: color === TextColor.secondary,\n    [styles.accent]: color === TextColor.accent,\n  });\n\n  const content = (\n    <>\n      {children}\n      {iconRight ? (\n        <FontAwesomeIcon\n          className={styles.iconRight}\n          icon={iconRight}\n          color=\"inherit\"\n        />\n      ) : null}\n    </>\n  );\n\n  if (link) {\n    return (\n      <a href={href} className={classes}>\n        {content}\n      </a>\n    );\n  }\n\n  return <span className={classes}>{content}</span>;\n};\n\nexport default memo(Text);\n","import React, { memo, ReactNode } from 'react';\nimport { faExclamationCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport styles from './DashboardTitle.module.scss';\n\nconst DashboardTitle: React.FC<{ children: ReactNode }> = ({ children }) => {\n  return (\n    <div className={styles.root}>\n      <FontAwesomeIcon\n        className={styles.icon}\n        icon={faExclamationCircle}\n        color=\"inherit\"\n      />\n      <h1 className={styles.title}>{children}</h1>\n    </div>\n  );\n};\n\nexport default memo(DashboardTitle);\n","import React, { memo, useState } from 'react';\nimport { defineMessage, useIntl } from 'react-intl';\nimport {\n  faClock,\n  faDatabase,\n  faFile,\n  faWaveSquare,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport './Recharts.scss';\nimport { Tab, Tabs } from '../../components/Tabs';\nimport TabPanel from '../../components/Tabs/TabPanel';\nimport theme from '../../theme.scss';\nimport styles from './ChartsWidget.modules.scss';\nimport Chart from './components/Chart';\nimport ChartLegend from './components/ChartLegend';\n\nconst messages = defineMessage({\n  avgResponseDelayTitle: {\n    id: 'chartsWidget.avgResponseDelayTitle',\n    defaultMessage: 'Avg. response delay',\n  },\n  lastQueueSizeTitle: {\n    id: 'chartsWidget.lastQueueSizeTitle',\n    defaultMessage: 'Last queue size',\n  },\n  avgPayloadSizeTitle: {\n    id: 'chartsWidget.avgPayloadSizeTitle',\n    defaultMessage: 'Avf. payload size',\n  },\n  deadLetterQueueTitle: {\n    id: 'chartsWidget.deadLetterQueueTitle',\n    defaultMessage: 'Dead letter queue',\n  },\n});\n\nconst dataGenerator = (n: number) => {\n  const data = [];\n  for (let i = 0; i < n; i++) {\n    const value0 = Math.floor(Math.random() * 10 + 1);\n    const value1 = Math.floor(Math.random() * 10 + 1);\n    const value2 = -Math.floor(Math.random() * 10 + 1);\n    data.push({\n      date: Date.now() + i * 1000 * 60 * 60,\n      size: value1 - value2,\n      pendingIncreased: value1 / 5,\n      pendingResolved: value2 / 5,\n    });\n  }\n\n  return data;\n};\n\nconst data = dataGenerator(100);\n\nenum TabId {\n  avgResponseDelay = 'avgResponseDelay',\n  lastQueueSize = 'lastQueueSize',\n  avgPayloadSize = 'avgPayloadSize',\n  deadLetterQueue = 'deadLetterQueue',\n}\n\nconst ChartsWidget: React.FC<{}> = () => {\n  const intl = useIntl();\n\n  console.log(theme);\n\n  const [selectedTabId, setSelectedTabId] = useState<string>(\n    TabId.lastQueueSize\n  );\n\n  return (\n    <div className={styles.root}>\n      <Tabs>\n        <Tab\n          isSelected={TabId.avgResponseDelay === selectedTabId}\n          id={TabId.avgResponseDelay}\n          title={intl.formatMessage(messages.avgResponseDelayTitle)}\n          icon={faClock}\n          onClick={setSelectedTabId}\n        />\n        <Tab\n          isSelected={TabId.lastQueueSize === selectedTabId}\n          id={TabId.lastQueueSize}\n          title={intl.formatMessage(messages.lastQueueSizeTitle)}\n          icon={faWaveSquare}\n          onClick={setSelectedTabId}\n        />\n        <Tab\n          isSelected={TabId.avgPayloadSize === selectedTabId}\n          id={TabId.avgPayloadSize}\n          title={intl.formatMessage(messages.avgPayloadSizeTitle)}\n          icon={faDatabase}\n          onClick={setSelectedTabId}\n        />\n        <Tab\n          isSelected={TabId.deadLetterQueue === selectedTabId}\n          id={TabId.deadLetterQueue}\n          title={intl.formatMessage(messages.deadLetterQueueTitle)}\n          icon={faFile}\n          onClick={setSelectedTabId}\n        />\n      </Tabs>\n      <TabPanel>\n        <ChartLegend />\n        <Chart\n          data={data}\n          brushDataKey=\"size\"\n          areaDataKey=\"size\"\n          barDataKey=\"pendingIncreased\"\n          barDataKey2=\"pendingResolved\"\n        />\n      </TabPanel>\n    </div>\n  );\n};\n\nexport default memo(ChartsWidget);\n","import React, { memo } from 'react';\nimport { faChevronDown, faUserCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport Text from '../Text';\nimport styles from './HeaderBar.module.scss';\n\nconst HeaderBar: React.FC<{}> = () => {\n  return (\n    <header className={styles.root}>\n      <div className={styles.rightSideContent}>\n        <Text uppercase iconRight={faChevronDown}>\n          dashbird.io\n        </Text>\n        <FontAwesomeIcon\n          className={styles.userIcon}\n          icon={faUserCircle}\n          color=\"inherit\"\n        />\n      </div>\n    </header>\n  );\n};\n\nexport default memo(HeaderBar);\n","import React, { Fragment, memo } from 'react';\nimport { defineMessage, useIntl } from 'react-intl';\nimport { faCog, faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport { useNavigationPath } from '../../hooks/useNavigationPath';\nimport Text from '../Text';\nimport { TextColor, TextSize } from '../Text/Text';\nimport styles from './NavigationBar.module.scss';\n\nconst messages = defineMessage({\n  awsConsole: {\n    id: 'navigationBar.awsConsoleLink',\n    defaultMessage: 'Aws console',\n  },\n  configuration: {\n    id: 'navigationBar.configurationLink',\n    defaultMessage: 'Configuration',\n  },\n});\n\nconst NavigationBar: React.FC<{}> = () => {\n  const items = useNavigationPath();\n  const intl = useIntl();\n\n  return (\n    <div className={styles.root}>\n      <div>\n        {items.map((item, index, arr) => {\n          return (\n            <Fragment key={item.id}>\n              <Text\n                link\n                uppercase\n                size={TextSize.small}\n                color={TextColor.secondary}\n                href={item.href}\n              >\n                {item.label}\n              </Text>\n              {index < arr.length - 1 && (\n                <Text\n                  color={TextColor.secondary}\n                  className={styles.crumbSeparator}\n                >\n                  →\n                </Text>\n              )}\n            </Fragment>\n          );\n        })}\n      </div>\n      <div className={styles.links}>\n        <Text\n          link\n          uppercase\n          color={TextColor.accent}\n          size={TextSize.small}\n          href=\"#awsconsole\"\n          iconRight={faExternalLinkAlt}\n        >\n          {intl.formatMessage(messages.awsConsole)}\n        </Text>\n        <Text\n          link\n          uppercase\n          color={TextColor.accent}\n          href=\"#configuration\"\n          size={TextSize.small}\n          iconRight={faCog}\n        >\n          {intl.formatMessage(messages.configuration)}\n        </Text>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(NavigationBar);\n","export const useNavigationPath = () => {\n  // this is mocked implementation, I just hardcoded breadcrumbs to be able to visialize them\n  // in real life they can come from real navigation or storage\n\n  return [\n    { label: 'dashbird.io', id: 'dashbird', href: '#dashbird' },\n    { label: 'US-EAST-1', id: 'us-east-1', href: '#us-east-1' },\n    { label: 'SQS', id: 'sqs', href: '#sqs' },\n  ];\n};\n","import React, { memo, ReactNode } from 'react';\nimport { faSortDown } from '@fortawesome/free-solid-svg-icons';\n\nimport Text, { TextColor, TextSize } from '../../components/Text';\nimport styles from './HighlightStack.module.scss';\n\ninterface HighlightStackProps {\n  title: string;\n  left: ReactNode;\n  children: ReactNode;\n}\n\nconst HighlightStack: React.FC<HighlightStackProps> = ({\n  title,\n  left,\n  children,\n}) => {\n  return (\n    <div className={styles.root}>\n      <div className={styles.title}>\n        <Text uppercase size={TextSize.small} color={TextColor.secondary}>\n          {title}\n        </Text>\n        <Text\n          iconRight={faSortDown}\n          size={TextSize.small}\n          color={TextColor.secondary}\n        >\n          {left}\n        </Text>\n      </div>\n      <div className={styles.itemsContainer}>{children}</div>\n    </div>\n  );\n};\n\nexport default memo(HighlightStack);\n","import React, { memo } from 'react';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow';\n\nimport theme from '../../theme.scss';\nimport Text, { TextColor, TextSize } from '../Text';\nimport styles from './HighlightStackItem.module.scss';\n\ninterface HighlightStackItemProps {\n  title: string;\n  description: string;\n  iconType: IconProp;\n  date?: Date;\n  percentage?: number;\n}\n\nconst HighlightStackItem: React.FC<HighlightStackItemProps> = ({\n  title,\n  description,\n  iconType,\n  date,\n  percentage = 0,\n}) => {\n  return (\n    <div\n      className={styles.root}\n      style={{\n        background: `linear-gradient(90deg, #f8f8fe ${100 * percentage}%, ${\n          theme.white\n        } 0%)`,\n      }}\n    >\n      <div className={styles.leftSide}>\n        <FontAwesomeIcon icon={iconType} />\n      </div>\n      <div className={styles.rightSide}>\n        <div className={styles.titleContainer}>\n          <Text size={TextSize.small}>{title}</Text>\n          {date && (\n            <Text\n              size={TextSize.small}\n              color={TextColor.secondary}\n              className={styles.date}\n            >\n              {formatDistanceToNow(date)} ago\n            </Text>\n          )}\n        </div>\n\n        <Text size={TextSize.small} color={TextColor.secondary}>\n          {description}\n        </Text>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(HighlightStackItem);\n","import React, { memo } from 'react';\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\n\nimport HighlightStack, {\n  HighlightStackItem,\n} from '../../components/HighlightStack';\n\nconst cards = [\n  {\n    id: 1,\n    title: 'Incident #41288',\n    subtitle: 'duration (in ms) was above 1 on avarage during the last minute',\n    date: new Date(),\n  },\n  {\n    id: 2,\n    title: 'Incident #41289',\n    subtitle: 'duration (in ms) was above 1 on avarage during the last minute',\n    date: new Date(),\n  },\n];\n\nconst AlertsWidget: React.FC<{}> = () => {\n  return (\n    <HighlightStack title=\"Alerts\" left=\"Latest\">\n      {cards.map((card) => (\n        <HighlightStackItem\n          title={card.title}\n          description={card.subtitle}\n          iconType={faExclamationTriangle}\n          date={card.date}\n        />\n      ))}\n    </HighlightStack>\n  );\n};\n\nexport default memo(AlertsWidget);\n","import React, { memo } from 'react';\n\nimport styles from './Tabs.module.scss';\n\ninterface TabsProps {\n  children: React.ReactNode;\n}\n\nconst Tabs: React.FC<TabsProps> = ({ children }) => {\n  return <div className={styles.tabs}>{children}</div>;\n};\n\nexport default memo(Tabs);\n","import React, { memo, useCallback } from 'react';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport clsx from 'clsx';\n\nimport Text, { TextColor, TextSize } from '../Text';\nimport styles from './Tabs.module.scss';\n\ninterface TabProps {\n  id: string;\n  title: string;\n  icon: IconProp;\n  isSelected?: boolean;\n  onClick: (id: string) => void;\n}\n\nconst Tab: React.FC<TabProps> = ({ id, title, icon, isSelected, onClick }) => {\n  const handleClick = useCallback(() => {\n    onClick(id);\n  }, [id, onClick]);\n\n  return (\n    <div\n      className={clsx(styles.tab, { [styles.selectedTab]: isSelected })}\n      onClick={handleClick}\n    >\n      <div className={styles.tabContent}>\n        <div className={styles.tabContentHeader}>\n          <Text uppercase color={TextColor.secondary} size={TextSize.small}>\n            {title}\n          </Text>\n          <FontAwesomeIcon\n            className={styles.userIcon}\n            icon={icon}\n            color=\"inherit\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Tab);\n","import React, { memo } from 'react';\n\nimport styles from './Tabs.module.scss';\n\ninterface TabPanelProps {\n  children: React.ReactNode;\n}\n\nconst TabPanel: React.FC<TabPanelProps> = ({ children }) => {\n  return <div className={styles.tabPanel}>{children}</div>;\n};\n\nexport default memo(TabPanel);\n","import React from 'react';\nimport {\n  Area,\n  AreaChart,\n  Bar,\n  Brush,\n  CartesianAxis,\n  CartesianGrid,\n  Cell,\n  ComposedChart,\n  ReferenceLine,\n  ResponsiveContainer,\n  XAxis,\n  YAxis,\n} from 'recharts';\n\nimport theme from '../../../theme.scss';\n\ninterface BrushTravellerParams {\n  x: number;\n  y: number;\n  height: number;\n}\n\nconst renderBrushTraveller = ({\n  x,\n  y,\n  height,\n}: BrushTravellerParams): SVGElement => {\n  // border radius of traveller\n  const radius = 2;\n  // we want travellerHeight to be 1/3 of BrushChart height + we need to extract radius from top and bottom\n  const travellerHeight = height / 3 - radius * 2;\n  // we want traveller to be 3px width, so travellerWidth + radius from top + radius from bottom will give us what we want\n  const travellerWidth = 1;\n\n  // we doing \"as unknown as SVGElement\" to properly set types, as library has bug their\n  return ((\n    <path\n      d={`M${x},${y + travellerHeight + radius * 2}\n        h${travellerWidth}\n        q${radius},0 ${radius},${radius}\n        v${travellerHeight}\n        q0,${radius} -${radius},${radius}\n        h-${travellerWidth}\n        z\n      `}\n      fill={theme.primaryColor}\n    />\n  ) as unknown) as SVGElement;\n};\n\ninterface ChartProps {\n  data: any;\n  brushDataKey: string;\n  areaDataKey: string;\n  barDataKey: string;\n  barDataKey2: string;\n}\n\nconst formatDateTick = (tick: number) => {\n  return new Date(tick).getHours() + ':00';\n};\n\nconst AnotherLine = (props: any) => {\n  const {\n    viewBox: { x, y },\n    xoffset,\n    yheight,\n  } = props;\n  // console.log(\"ANOTHER LINE\",props)\n  return (\n    <line\n      x1={x + xoffset}\n      x2={x + xoffset}\n      y1={y - yheight / 2}\n      y2={y + yheight / 2}\n      {...props}\n    />\n  );\n};\n\n// function CustomXAxisLabel(props: any) {\n//   console.log(props);\n//   return (\n//     <line\n//       {...tickLineProps}\n//       {...lineCoord}\n//       className={classNames(\n//         'recharts-cartesian-axis-tick-line',\n//         _.get(tickLine, 'className')\n//       )}\n//     />\n//   );\n// }\n\nconst Chart: React.FC<ChartProps> = ({\n  data,\n  brushDataKey,\n  areaDataKey,\n  barDataKey,\n  barDataKey2,\n}) => {\n  const off = () => {\n    return 0.1;\n  };\n  return (\n    <>\n      <ResponsiveContainer width=\"100%\" height={theme.space * 10}>\n        <ComposedChart\n          data={data}\n          margin={{\n            right: -1,\n            left: -1,\n          }}\n          syncId=\"anyId\"\n        >\n          <Brush\n            dataKey={brushDataKey}\n            height={theme.space * 10}\n            startIndex={2}\n            endIndex={25}\n            stroke=\"#f1f1f1\"\n            y={-1}\n            travellerWidth={3}\n            traveller={renderBrushTraveller}\n            alwaysShowText\n            padding={{ top: theme.space * 2 }}\n          >\n            <AreaChart>\n              <Area\n                type=\"monotone\"\n                dataKey={areaDataKey}\n                stroke=\"#f1f1f1\"\n                fill=\"#f8f8f8\"\n              />\n            </AreaChart>\n          </Brush>\n        </ComposedChart>\n      </ResponsiveContainer>\n      <ResponsiveContainer width=\"100%\" height={theme.space * 30}>\n        <ComposedChart\n          data={data}\n          margin={{\n            top: theme.space * 2,\n            left: theme.space * 1,\n          }}\n          syncId=\"anyId\"\n        >\n          <Brush\n            dataKey={brushDataKey}\n            startIndex={2}\n            endIndex={25}\n            stroke=\"#f1f1f1\"\n            y={-1}\n            width={0}\n            height={0.00001}\n            travellerWidth={3}\n            traveller={renderBrushTraveller}\n            alwaysShowText\n          />\n          <ReferenceLine y={0} stroke=\"grey\" />\n          <XAxis\n            dataKey=\"date\"\n            tickSize={10}\n            axisLine={false}\n            tickFormatter={formatDateTick}\n            // tick={CustomXAxisLabel as any}\n          />\n          <YAxis\n            dataKey={areaDataKey}\n            type=\"number\"\n            padding={{ bottom: 60 }}\n            // domain={[-8, 20]}\n            axisLine={false}\n            unit=\"K\"\n          />\n          <defs>\n            <linearGradient id=\"splitColor\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n              <stop offset={off()} stopColor={'#feebed'} stopOpacity={1} />\n              <stop offset={off()} stopColor=\"#f8f8f8\" stopOpacity={1} />\n            </linearGradient>\n            <linearGradient id=\"splitColorStroke\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n              <stop offset={off()} stopColor={'red'} stopOpacity={1} />\n              <stop\n                offset={off()}\n                stopColor={theme.primaryColor}\n                stopOpacity={1}\n              />\n            </linearGradient>\n          </defs>\n          <Area\n            type=\"monotone\"\n            dataKey={areaDataKey}\n            stroke=\"url(#splitColorStroke)\"\n            fill=\"url(#splitColor)\"\n          />\n          <Bar dataKey={barDataKey} barSize={4} fill=\"blue\" />\n          <Bar dataKey={barDataKey2} barSize={4} fill=\"red\" />\n          {/* <Tooltip />\n          <ReferenceLine y={1} x={5} stroke=\"blue\" strokeDasharray=\"0.5 0.5\" /> */}\n        </ComposedChart>\n      </ResponsiveContainer>\n    </>\n  );\n};\n\nexport default Chart;\n","import React, { memo } from 'react';\nimport { faChevronDown, faUserCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport Text from '../Text';\nimport { TextColor, TextSize } from '../Text/Text';\nimport styles from './RangeCalendar.module.scss';\n\nconst RangeCalendar: React.FC<{}> = () => {\n  return (\n    <div className={styles.root}>\n      <div>\n        <Text size={TextSize.small} link uppercase color={TextColor.accent}>\n          ~15 hours ago {' → '}\n        </Text>\n        <Text size={TextSize.small} link uppercase color={TextColor.accent}>\n          ~9 hours ago\n        </Text>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(RangeCalendar);\n","import React, { memo } from 'react';\nimport { defineMessage, useIntl } from 'react-intl';\nimport { faSortDown } from '@fortawesome/free-solid-svg-icons';\n\nimport RangeCalendar from '../../../components/RangeCalendar';\nimport Text, { TextColor, TextSize } from '../../../components/Text';\nimport styles from './ChartLegend.module.scss';\n\nconst messages = defineMessage({\n  pendingIncreased: {\n    id: 'chartsWidget.pendingIncreased',\n    defaultMessage: 'Pending increased',\n  },\n  pendingResolved: {\n    id: 'chartsWidget.pendingResolved',\n    defaultMessage: 'Pending resolved',\n  },\n  alerts: {\n    id: 'chartsWidget.alerts',\n    defaultMessage: 'Alerts',\n  },\n  insights: {\n    id: 'chartsWidget.insights',\n    defaultMessage: 'Insights',\n  },\n  configChange: {\n    id: 'chartsWidget.configChange',\n    defaultMessage: 'Config. change',\n  },\n});\n\nconst ChartLegend: React.FC<{}> = () => {\n  const intl = useIntl();\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.leftSide}>\n        <Text\n          className={styles.legendItem}\n          size={TextSize.small}\n          color={TextColor.secondary}\n        >\n          {intl.formatMessage(messages.pendingIncreased)}\n        </Text>\n        <Text\n          className={styles.legendItem}\n          size={TextSize.small}\n          color={TextColor.secondary}\n        >\n          {intl.formatMessage(messages.pendingResolved)}\n        </Text>\n        <Text\n          className={styles.legendItem}\n          size={TextSize.small}\n          color={TextColor.accent}\n        >\n          {intl.formatMessage(messages.alerts)}\n        </Text>\n        <Text\n          className={styles.legendItem}\n          size={TextSize.small}\n          color={TextColor.accent}\n        >\n          {intl.formatMessage(messages.insights)}\n        </Text>\n        <Text\n          className={styles.legendItem}\n          size={TextSize.small}\n          color={TextColor.accent}\n        >\n          {intl.formatMessage(messages.configChange)}\n        </Text>\n      </div>\n      <div className={styles.rightSide}>\n        <RangeCalendar />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChartLegend);\n","export enum RequestState {\n  unset = 'unset',\n  waiting = 'waiting',\n  success = 'success',\n  failure = 'failure',\n}\n\nexport interface QueueSizeHistoryEntry {\n  id: string;\n  size: number;\n  pendingIncreased: number;\n  pendingResolved: number;\n}\n\nexport interface ResourceHistoryEntry {\n  id: string;\n  name: string;\n  timeUsed: string;\n  percentage: number;\n}\n\nexport interface InsightHistoryEntry {\n  id: string;\n  name: string;\n  description: string;\n  timestamp: number;\n}\n\nexport interface AlertHistoryEntry {\n  id: string;\n  name: string;\n  description: string;\n  timestamp: number;\n}\n","import React, { memo } from 'react';\nimport { faLightbulb } from '@fortawesome/free-solid-svg-icons';\n\nimport HighlightStack, {\n  HighlightStackItem,\n} from '../../components/HighlightStack';\n\nconst cards = [\n  {\n    id: 1,\n    title: 'Queue is growing',\n    subtitle: 'duration (in ms) was above 1 on avarage during the last minute',\n    date: new Date(),\n  },\n  {\n    id: 2,\n    title: 'Queue is growing',\n    subtitle: 'duration (in ms) was above 1 on avarage during the last minute',\n    date: new Date(),\n  },\n  {\n    id: 3,\n    title: 'Queue is growing',\n    subtitle: 'duration (in ms) was above 1 on avarage during the last minute',\n    date: new Date(),\n  },\n];\n\nconst InsightsWidget: React.FC<{}> = () => {\n  return (\n    <HighlightStack title=\"Insights\" left=\"Latest\">\n      {cards.map((card) => (\n        <HighlightStackItem\n          title={card.title}\n          description={card.subtitle}\n          date={card.date}\n          iconType={faLightbulb}\n        />\n      ))}\n    </HighlightStack>\n  );\n};\n\nexport default memo(InsightsWidget);\n","import { ActionType, createAsyncAction } from 'typesafe-actions';\n\nimport {\n  AlertHistoryEntry,\n  InsightHistoryEntry,\n  ResourceHistoryEntry,\n} from '../../api';\n\nexport const fetchResourcesDataAsyncAction = createAsyncAction(\n  '@widgets/FETCH_RESOURCES_DATA_REQUEST',\n  '@widgets/FETCH_RESOURCES_DATA_SUCCESS',\n  '@widgets/FETCH_RESOURCES_DATA_FAILURE'\n)<void, ResourceHistoryEntry[], Error>();\n\nexport const fetchInsightsDataAsyncAction = createAsyncAction(\n  '@widgets/FETCH_INSIGHTS_DATA_REQUEST',\n  '@widgets/FETCH_INSIGHTS_DATA_SUCCESS',\n  '@widgets/FETCH_INSIGHTS_DATA_FAILURE'\n)<void, InsightHistoryEntry[], Error>();\n\nexport const fetchAlertsDataAsyncAction = createAsyncAction(\n  '@widgets/FETCH_ALERTS_DATA_REQUEST',\n  '@widgets/FETCH_ALERTS_DATA_SUCCESS',\n  '@widgets/FETCH_ALERTS_DATA_FAILURE'\n)<void, AlertHistoryEntry[], Error>();\n\nexport type WidgetsAction =\n  | ActionType<typeof fetchResourcesDataAsyncAction>\n  | ActionType<typeof fetchInsightsDataAsyncAction>\n  | ActionType<typeof fetchAlertsDataAsyncAction>;\n","import { homepage } from '../../package.json';\nimport {\n  AlertHistoryEntry,\n  InsightHistoryEntry,\n  QueueSizeHistoryEntry,\n  ResourceHistoryEntry,\n} from './types';\n\nexport * from './types';\n\nexport default {\n  async request(method: string, { path }: { path: string }) {\n    const url = `${homepage}${path}`;\n\n    const params = {\n      method,\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    };\n    const rawResponse = await fetch(url, params);\n    const response = await rawResponse.json();\n\n    if (!rawResponse.ok) {\n      throw response;\n    }\n\n    return response;\n  },\n\n  get(path: string) {\n    return this.request('GET', { path });\n  },\n\n  fetchQueueSizeHistory(): Promise<{\n    total: number;\n    items: QueueSizeHistoryEntry[];\n  }> {\n    return this.get('/history/queueSize');\n  },\n\n  fetchResourcesHistory(): Promise<{\n    total: number;\n    items: ResourceHistoryEntry[];\n  }> {\n    return this.get('/history/resources');\n  },\n\n  fetchAlertsHistory(): Promise<{ total: number; items: AlertHistoryEntry[] }> {\n    return this.get('/history/alerts');\n  },\n\n  fetchInsightsHistory(): Promise<{\n    total: number;\n    items: InsightHistoryEntry[];\n  }> {\n    return this.get('/history/insights');\n  },\n};\n","import { getType } from 'typesafe-actions';\n\nimport {\n  AlertHistoryEntry,\n  InsightHistoryEntry,\n  RequestState,\n  ResourceHistoryEntry,\n} from '../../api/types';\nimport {\n  fetchAlertsDataAsyncAction,\n  fetchInsightsDataAsyncAction,\n  fetchResourcesDataAsyncAction,\n  WidgetsAction,\n} from './actions';\n\nexport interface WidgetsState {\n  resourceHistory: ResourceHistoryEntry[];\n  insightsHistory: InsightHistoryEntry[];\n  alertsHistory: AlertHistoryEntry[];\n  resourceHistoryRequestState: RequestState;\n  insightsHistoryRequestState: RequestState;\n  alertsHistoryRequestState: RequestState;\n}\n\nconst initialState: WidgetsState = {\n  resourceHistory: [],\n  insightsHistory: [],\n  alertsHistory: [],\n  resourceHistoryRequestState: RequestState.unset,\n  insightsHistoryRequestState: RequestState.unset,\n  alertsHistoryRequestState: RequestState.unset,\n};\n\nexport const widgetsReducer = (state = initialState, action: WidgetsAction) => {\n  switch (action.type) {\n    case getType(fetchResourcesDataAsyncAction.request): {\n      return {\n        ...state,\n        resourceHistoryRequestState: RequestState.waiting,\n      };\n    }\n    case getType(fetchResourcesDataAsyncAction.success): {\n      return {\n        ...state,\n        resourceHistoryRequestState: RequestState.success,\n      };\n    }\n    case getType(fetchResourcesDataAsyncAction.failure): {\n      return {\n        ...state,\n        resourceHistoryRequestState: RequestState.failure,\n      };\n    }\n\n    case getType(fetchInsightsDataAsyncAction.request): {\n      return {\n        ...state,\n        insightsHistoryRequestState: RequestState.waiting,\n      };\n    }\n    case getType(fetchInsightsDataAsyncAction.success): {\n      return {\n        ...state,\n        insightsHistoryRequestState: RequestState.success,\n      };\n    }\n    case getType(fetchInsightsDataAsyncAction.failure): {\n      return {\n        ...state,\n        insightsHistoryRequestState: RequestState.failure,\n      };\n    }\n\n    case getType(fetchAlertsDataAsyncAction.request): {\n      return {\n        ...state,\n        alertsHistoryRequestState: RequestState.waiting,\n      };\n    }\n    case getType(fetchAlertsDataAsyncAction.success): {\n      return {\n        ...state,\n        alertsHistoryRequestState: RequestState.success,\n      };\n    }\n    case getType(fetchAlertsDataAsyncAction.failure): {\n      return {\n        ...state,\n        alertsHistoryRequestState: RequestState.failure,\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n","import React, { memo, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { faTable } from '@fortawesome/free-solid-svg-icons';\n\nimport HighlightStack, {\n  HighlightStackItem,\n} from '../../components/HighlightStack';\nimport { fetchResourcesDataAction } from '../../state/widgets';\n\nconst cards = [\n  {\n    id: 1,\n    title: 'usage-service-prod-recird-inventory-usage-on-two-lines',\n    subtitle: '125ms',\n    percentage: 0.8,\n  },\n  {\n    id: 2,\n    title: 'usage-service-prod-recird-inventory-usage',\n    subtitle: '125ms',\n    percentage: 0.3,\n  },\n  {\n    id: 3,\n    title: 'usage-service-prod-recird-inventory-usage',\n    subtitle: '125ms',\n    percentage: 0.2,\n  },\n];\n\nconst ResourcesWidget: React.FC<{}> = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchResourcesDataAction());\n  }, [dispatch]);\n\n  return (\n    <HighlightStack title=\"Resources\" left=\"Execution time\">\n      {cards.map((card) => (\n        <HighlightStackItem\n          title={card.title}\n          description={card.subtitle}\n          percentage={card.percentage}\n          iconType={faTable}\n        />\n      ))}\n    </HighlightStack>\n  );\n};\n\nexport default memo(ResourcesWidget);\n","import api from '../../api';\nimport { RootThunkAction } from '../action';\nimport {\n  fetchAlertsDataAsyncAction,\n  fetchInsightsDataAsyncAction,\n  fetchResourcesDataAsyncAction,\n} from './actions';\n\nexport const fetchResourcesDataAction = (): RootThunkAction => {\n  return async (dispatch) => {\n    dispatch(fetchResourcesDataAsyncAction.request());\n\n    try {\n      const res = await api.fetchResourcesHistory();\n      dispatch(fetchResourcesDataAsyncAction.success(res.items));\n    } catch (e) {\n      dispatch(fetchResourcesDataAsyncAction.failure(e));\n    }\n  };\n};\n\nexport const fetchAlertsDataAction = (): RootThunkAction => {\n  return async (dispatch) => {\n    dispatch(fetchAlertsDataAsyncAction.request());\n\n    try {\n      const res = await api.fetchAlertsHistory();\n      dispatch(fetchAlertsDataAsyncAction.success(res.items));\n    } catch (e) {\n      dispatch(fetchAlertsDataAsyncAction.failure(e));\n    }\n  };\n};\n\nexport const fetchInsightsDataAction = (): RootThunkAction => {\n  return async (dispatch) => {\n    dispatch(fetchInsightsDataAsyncAction.request());\n\n    try {\n      const res = await api.fetchInsightsHistory();\n      dispatch(fetchInsightsDataAsyncAction.success(res.items));\n    } catch (e) {\n      dispatch(fetchInsightsDataAsyncAction.failure(e));\n    }\n  };\n};\n","import React from 'react';\n\nimport styles from './App.module.scss';\nimport AlertTitle from './components/DashboardTitle';\nimport HeaderBar from './components/HeaderBar';\nimport NavigationBar from './components/NavigationBar';\nimport AlertsWidget from './widgets/AlertsWidget';\nimport ChartsWidget from './widgets/ChartsWidget';\nimport InsightsWidget from './widgets/InsightsWidget';\nimport ResourcesWidget from './widgets/ResourcesWidget';\n\nconst App: React.FC<{}> = () => {\n  return (\n    <div data-testid=\"app-root\">\n      <HeaderBar />\n      <main className={styles.content}>\n        <div className={styles.space3} />\n        <NavigationBar />\n        <AlertTitle>alering-check-policy-conditions</AlertTitle>\n        <div className={styles.space2} />\n        <ChartsWidget />\n        <div className={styles.space1} />\n        <div className={styles.widgets}>\n          <ResourcesWidget />\n          <InsightsWidget />\n          <AlertsWidget />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import { ActionType, createAsyncAction } from 'typesafe-actions';\n\nimport { QueueSizeHistoryEntry } from '../../api';\n\nexport const fetchQueueSizeHistoryAsyncAction = createAsyncAction(\n  '@chart/FETCH_QUEUE_SIZE_HISTORY_REQUEST',\n  '@chart/FETCH_QUEUE_SIZE_HISTORY_SUCCESS',\n  '@chart/FETCH_QUEUE_SIZE_HISTORY_FAILURE'\n)<void, QueueSizeHistoryEntry[], Error>();\n\nexport type ChartAction = ActionType<typeof fetchQueueSizeHistoryAsyncAction>;\n","import { getType } from 'typesafe-actions';\n\nimport { QueueSizeHistoryEntry, RequestState } from '../../api/types';\nimport { ChartAction, fetchQueueSizeHistoryAsyncAction } from './actions';\n\nexport interface ChartState {\n  queueSizeHistory: QueueSizeHistoryEntry[];\n  queueSizeHistoryRequestState: RequestState;\n}\n\nconst initialState: ChartState = {\n  queueSizeHistory: [],\n  queueSizeHistoryRequestState: RequestState.unset,\n};\n\nexport const chartReducer = (state = initialState, action: ChartAction) => {\n  switch (action.type) {\n    case getType(fetchQueueSizeHistoryAsyncAction.request): {\n      return {\n        ...state,\n        queueSizeHistoryRequestState: RequestState.waiting,\n      };\n    }\n    case getType(fetchQueueSizeHistoryAsyncAction.success): {\n      return {\n        ...state,\n        queueSizeHistoryRequestState: RequestState.success,\n      };\n    }\n    case getType(fetchQueueSizeHistoryAsyncAction.failure): {\n      return {\n        ...state,\n        queueSizeHistoryRequestState: RequestState.failure,\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n","import { combineReducers } from 'redux';\n\nimport { chartReducer, ChartState } from './chart/reducer';\nimport { widgetsReducer, WidgetsState } from './widgets/reducer';\n\nexport interface RootState {\n  chart: ChartState;\n  widgets: WidgetsState;\n}\n\nexport default combineReducers({\n  chart: chartReducer,\n  widgets: widgetsReducer,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { IntlProvider } from 'react-intl';\nimport { Provider } from 'react-redux';\n\nimport './index.scss';\nimport App from './App';\nimport { configureStore } from './state';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <IntlProvider locale=\"en\">\n        <App />\n      </IntlProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// https://www.pluralsight.com/guides/how-to-organize-your-react-+-redux-codebase\nimport { applyMiddleware, createStore } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\n\nimport rootReducer from './reducer';\n\nexport const configureStore = (initialState = {}) => {\n  const loggerMiddleware = createLogger();\n\n  const middleware =\n    process.env.NODE_ENV === 'production'\n      ? [thunkMiddleware]\n      : [thunkMiddleware, loggerMiddleware];\n\n  return createStore(rootReducer, initialState, applyMiddleware(...middleware));\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"space\":\"8\",\"white\":\"#fff\",\"primaryColor\":\"#4c44c5\",\"textColorPrimary\":\"#202225\",\"content\":\"App_content__1Wt3K\",\"space3\":\"App_space3__2i_0A\",\"space2\":\"App_space2__2dUjq\",\"space1\":\"App_space1__2rAN4\",\"widgets\":\"App_widgets__scwTe\",\"spaceToRight\":\"App_spaceToRight__38xjx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"space\":\"8\",\"white\":\"#fff\",\"primaryColor\":\"#4c44c5\",\"textColorPrimary\":\"#202225\",\"root\":\"HighlightStackItem_root__3AkNH\",\"leftSide\":\"HighlightStackItem_leftSide__2mlFM\",\"rightSide\":\"HighlightStackItem_rightSide__1FKI1\",\"titleContainer\":\"HighlightStackItem_titleContainer__1wM00\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"space\":\"8\",\"white\":\"#fff\",\"primaryColor\":\"#4c44c5\",\"textColorPrimary\":\"#202225\",\"root\":\"DashboardTitle_root__3Wzb3\",\"title\":\"DashboardTitle_title__3cpAq\",\"icon\":\"DashboardTitle_icon__2vMtP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"space\":\"8\",\"white\":\"#fff\",\"primaryColor\":\"#4c44c5\",\"textColorPrimary\":\"#202225\",\"root\":\"HeaderBar_root__3ojWq\",\"rightSideContent\":\"HeaderBar_rightSideContent__3S2gi\",\"userIcon\":\"HeaderBar_userIcon__hL9Xc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"space\":\"8\",\"white\":\"#fff\",\"primaryColor\":\"#4c44c5\",\"textColorPrimary\":\"#202225\",\"root\":\"NavigationBar_root__8Tt_b\",\"links\":\"NavigationBar_links__2u1IY\",\"crumbSeparator\":\"NavigationBar_crumbSeparator__3ClXO\",\"awsConsoleTextContainer\":\"NavigationBar_awsConsoleTextContainer__3bHr3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"space\":\"8\",\"white\":\"#fff\",\"primaryColor\":\"#4c44c5\",\"textColorPrimary\":\"#202225\",\"root\":\"HighlightStack_root__17dDW\",\"title\":\"HighlightStack_title__2_mc8\",\"cardContainer\":\"HighlightStack_cardContainer__2TlGH\",\"itemsContainer\":\"HighlightStack_itemsContainer__1j4jR\"};"],"sourceRoot":""}