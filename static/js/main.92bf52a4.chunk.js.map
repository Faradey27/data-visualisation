{"version":3,"sources":["components/Tabs/Tabs.module.scss","App.module.scss","components/Text/Text.module.scss","components/InfoCard/InfoCard.module.scss","components/DashboardTitle/DashboardTitle.module.scss","components/HeaderBar/HeaderBar.module.scss","components/NavigationBar/NavigationBar.module.scss","widgets/AlertsWidget/AlertsWidget.module.scss","widgets/InsightsWidget/InsightsWidget.module.scss","widgets/ResourcesWidget/ResourcesWidget.module.scss","components/Text/Text.tsx","components/DashboardTitle/DashboardTitle.tsx","components/InfoCard/InfoCard.tsx","components/HeaderBar/HeaderBar.tsx","components/NavigationBar/NavigationBar.tsx","hooks/useNavigationPath.ts","widgets/ChartsWidget/ChartsWidget.tsx","widgets/AlertsWidget/AlertsWidget.tsx","components/Tabs/Tabs.tsx","components/Tabs/Tab.tsx","components/Tabs/TabPanel.tsx","widgets/InsightsWidget/InsightsWidget.tsx","widgets/ResourcesWidget/ResourcesWidget.tsx","App.tsx","index.tsx"],"names":["module","exports","TextColor","TextSize","memo","className","styles","root","icon","faExclamationCircle","color","title","InfoCardVariant","link","href","uppercase","size","iconRight","children","clsx","small","primary","secondary","accent","content","rightSideContent","faChevronDown","userIcon","faUserCircle","messages","defineMessage","awsConsole","id","defaultMessage","configuration","items","label","intl","useIntl","map","item","index","arr","key","length","links","awsConsoleTextContainer","faExternalLinkAlt","formatMessage","faCog","TabId","variantIconsMap","resource","faTable","insight","faLightbulb","alert","faExclamationTriangle","subtitle","variant","date","leftSide","rightSide","formatDate","alertsTitle","executionTime","cards","Date","now","faSortDown","card","cardContainer","tabs","isSelected","onClick","handleClick","useCallback","tab","selectedTab","tabContent","tabContentHeader","tabPanel","avgResponseDelayTitle","lastQueueSizeTitle","avgPayloadSizeTitle","deadLetterQueueTitle","useState","lastQueueSize","selectedTabId","setSelectedTabId","avgResponseDelay","faClock","faWaveSquare","avgPayloadSize","faDatabase","deadLetterQueue","faFile","insightsTitle","resourcesTitle","App","data-testid","space3","space2","space1","widgets","spaceToRight","ReactDOM","render","StrictMode","locale","document","getElementById"],"mappings":"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","file":"static/js/main.92bf52a4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs\":\"Tabs_tabs__mNPqW\",\"tab\":\"Tabs_tab__28Mkm\",\"selectedTab\":\"Tabs_selectedTab__f1vdP\",\"tabContent\":\"Tabs_tabContent__2FZkX\",\"tabContentHeader\":\"Tabs_tabContentHeader__1V80p\",\"tabPanel\":\"Tabs_tabPanel__322Af\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"App_content__1Wt3K\",\"space3\":\"App_space3__2i_0A\",\"space2\":\"App_space2__2dUjq\",\"space1\":\"App_space1__2rAN4\",\"widgets\":\"App_widgets__scwTe\",\"spaceToRight\":\"App_spaceToRight__38xjx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Text_root__3JPFE\",\"uppercase\":\"Text_uppercase__2o0RV\",\"primary\":\"Text_primary__1wkT9\",\"secondary\":\"Text_secondary__1BSS_\",\"accent\":\"Text_accent__1IMFR\",\"iconRight\":\"Text_iconRight__2C0uF\",\"small\":\"Text_small__2vGLW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"InfoCard_root__3bZ56\",\"leftSide\":\"InfoCard_leftSide__qfyNT\",\"rightSide\":\"InfoCard_rightSide__24tou\",\"title\":\"InfoCard_title__2uTz6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DashboardTitle_root__3Wzb3\",\"title\":\"DashboardTitle_title__3cpAq\",\"icon\":\"DashboardTitle_icon__2vMtP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HeaderBar_root__3ojWq\",\"rightSideContent\":\"HeaderBar_rightSideContent__3S2gi\",\"userIcon\":\"HeaderBar_userIcon__hL9Xc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"NavigationBar_root__8Tt_b\",\"links\":\"NavigationBar_links__2u1IY\",\"awsConsoleTextContainer\":\"NavigationBar_awsConsoleTextContainer__3bHr3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AlertsWidget_root__8uyV0\",\"title\":\"AlertsWidget_title__2nxsW\",\"cardContainer\":\"AlertsWidget_cardContainer__2i6Q1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"InsightsWidget_root__3_5Dd\",\"title\":\"InsightsWidget_title__1kM89\",\"cardContainer\":\"InsightsWidget_cardContainer__fpmKS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ResourcesWidget_root__3xa4k\",\"title\":\"ResourcesWidget_title__1K_vM\",\"cardContainer\":\"ResourcesWidget_cardContainer__2euBi\"};","import React, { memo } from 'react';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport clsx from 'clsx';\n\nimport styles from './Text.module.scss';\n\nexport enum TextColor {\n  primary = 'primary',\n  secondary = 'secondary',\n  accent = 'accent',\n}\n\nexport enum TextSize {\n  small = 'small',\n}\n\ninterface TextProps {\n  children: React.ReactNode;\n  color?: TextColor;\n  size?: TextSize;\n  uppercase?: boolean;\n  link?: boolean;\n  href?: string;\n  iconRight?: IconProp;\n}\n\nconst Text: React.FC<TextProps> = ({\n  link,\n  href,\n  uppercase,\n  color,\n  size,\n  iconRight,\n  children,\n}) => {\n  const className = clsx(styles.root, {\n    [styles.small]: size === TextSize.small,\n    [styles.uppercase]: uppercase,\n    [styles.primary]: color === TextColor.primary,\n    [styles.secondary]: color === TextColor.secondary,\n    [styles.accent]: color === TextColor.accent,\n  });\n\n  const content = (\n    <>\n      {children}\n      {iconRight ? (\n        <FontAwesomeIcon\n          className={styles.iconRight}\n          icon={iconRight}\n          color=\"inherit\"\n        />\n      ) : null}\n    </>\n  );\n\n  if (link) {\n    return (\n      <a href={href} className={className}>\n        {content}\n      </a>\n    );\n  }\n\n  return <span className={className}>{content}</span>;\n};\n\nexport default memo(Text);\n","import React, { memo } from 'react';\nimport { faExclamationCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport styles from './DashboardTitle.module.scss';\n\nconst DashboardTitle: React.FC<{}> = () => {\n  return (\n    <div className={styles.root}>\n      <FontAwesomeIcon\n        className={styles.icon}\n        icon={faExclamationCircle}\n        color=\"inherit\"\n      />\n      <h1 className={styles.title}>alerting-check-policy-conditions</h1>\n    </div>\n  );\n};\n\nexport default memo(DashboardTitle);\n","import React, { memo } from 'react';\nimport {\n  faExclamationTriangle,\n  faLightbulb,\n  faTable,\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport Text, { TextColor, TextSize } from '../Text';\nimport styles from './InfoCard.module.scss';\n\nexport enum InfoCardVariant {\n  resource = 'resource',\n  insight = 'insight',\n  alert = 'alert',\n}\n\nconst variantIconsMap = {\n  [InfoCardVariant.resource]: faTable,\n  [InfoCardVariant.insight]: faLightbulb,\n  [InfoCardVariant.alert]: faExclamationTriangle,\n};\n\ninterface InfoCardProps {\n  title: string;\n  subtitle: string;\n  variant: InfoCardVariant;\n  date?: number;\n}\n\nconst formatDate = (date?: number) => {\n  if (date) {\n    return '3 days ago';\n  }\n};\n\nconst InfoCard: React.FC<InfoCardProps> = ({\n  title,\n  subtitle,\n  variant,\n  date,\n}) => {\n  return (\n    <div className={styles.root}>\n      <div className={styles.leftSide}>\n        <FontAwesomeIcon icon={variantIconsMap[variant]} />\n      </div>\n      <div className={styles.rightSide}>\n        <div className={styles.title}>\n          <Text size={TextSize.small}>{title}</Text>\n          <Text size={TextSize.small} color={TextColor.secondary}>\n            {formatDate(date)}\n          </Text>\n        </div>\n        <Text size={TextSize.small} color={TextColor.secondary}>\n          {subtitle}\n        </Text>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(InfoCard);\n","import React, { memo } from 'react';\nimport { faChevronDown, faUserCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport Text from '../Text';\nimport { TextColor } from '../Text/Text';\nimport styles from './HeaderBar.module.scss';\n\nconst HeaderBar: React.FC<{}> = () => {\n  return (\n    <header className={styles.root}>\n      <div />\n      <div className={styles.rightSideContent}>\n        <Text uppercase color={TextColor.secondary} iconRight={faChevronDown}>\n          dashbird.io\n        </Text>\n        <FontAwesomeIcon\n          className={styles.userIcon}\n          icon={faUserCircle}\n          color=\"inherit\"\n        />\n      </div>\n    </header>\n  );\n};\n\nexport default memo(HeaderBar);\n","import React, { memo } from 'react';\nimport { defineMessage, useIntl } from 'react-intl';\nimport { faCog, faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport { useNavigationPath } from '../../hooks/useNavigationPath';\nimport Text from '../Text';\nimport { TextColor } from '../Text/Text';\nimport styles from './NavigationBar.module.scss';\n\nconst messages = defineMessage({\n  awsConsole: {\n    id: 'navigationBar.awsConsoleLink',\n    defaultMessage: 'Aws console',\n  },\n  configuration: {\n    id: 'navigationBar.configurationLink',\n    defaultMessage: 'Configuration',\n  },\n});\n\nconst NavigationBar: React.FC<{}> = () => {\n  const items = useNavigationPath();\n  const intl = useIntl();\n\n  return (\n    <div className={styles.root}>\n      <div>\n        {items.map((item, index, arr) => {\n          return (\n            <Text\n              key={item.id}\n              link\n              uppercase\n              color={TextColor.secondary}\n              href={item.href}\n            >\n              {item.label}\n              {arr.length - 1 !== index ? ' → ' : ''}\n            </Text>\n          );\n        })}\n      </div>\n      <div className={styles.links}>\n        <div className={styles.awsConsoleTextContainer}>\n          <Text\n            link\n            uppercase\n            color={TextColor.accent}\n            href=\"#awsconsole\"\n            iconRight={faExternalLinkAlt}\n          >\n            {intl.formatMessage(messages.awsConsole)}\n          </Text>\n        </div>\n        <Text\n          link\n          uppercase\n          color={TextColor.accent}\n          href=\"#configuration\"\n          iconRight={faCog}\n        >\n          {intl.formatMessage(messages.configuration)}\n        </Text>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(NavigationBar);\n","export const useNavigationPath = () => {\n  // this is mocked implementation, I just hardcoded breadcrumbs to be able to visialize them\n  // in real life they can come from real navigation or storage\n\n  return [\n    { label: 'dashbird.io', id: 'dashbird', href: '#dashbird' },\n    { label: 'US-EAST-1', id: 'us-east-1', href: '#us-east-1' },\n    { label: 'SQS', id: 'sqs', href: '#sqs' },\n  ];\n};\n","import React, { memo, useState } from 'react';\nimport { defineMessage, useIntl } from 'react-intl';\nimport {\n  faClock,\n  faDatabase,\n  faFile,\n  faWaveSquare,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { Tab, Tabs } from '../../components/Tabs';\nimport TabPanel from '../../components/Tabs/TabPanel';\n\nconst messages = defineMessage({\n  avgResponseDelayTitle: {\n    id: 'chartsWidget.avgResponseDelayTitle',\n    defaultMessage: 'Avg. response delay',\n  },\n  lastQueueSizeTitle: {\n    id: 'chartsWidget.lastQueueSizeTitle',\n    defaultMessage: 'Last queue size',\n  },\n  avgPayloadSizeTitle: {\n    id: 'chartsWidget.avgPayloadSizeTitle',\n    defaultMessage: 'Avf. payload size',\n  },\n  deadLetterQueueTitle: {\n    id: 'chartsWidget.deadLetterQueueTitle',\n    defaultMessage: 'Dead letter queue',\n  },\n});\n\nenum TabId {\n  avgResponseDelay = 'avgResponseDelay',\n  lastQueueSize = 'lastQueueSize',\n  avgPayloadSize = 'avgPayloadSize',\n  deadLetterQueue = 'deadLetterQueue',\n}\n\nconst ChartsWidget: React.FC<{}> = () => {\n  const intl = useIntl();\n\n  const [selectedTabId, setSelectedTabId] = useState<string>(\n    TabId.lastQueueSize\n  );\n\n  return (\n    <div>\n      <Tabs>\n        <Tab\n          isSelected={TabId.avgResponseDelay === selectedTabId}\n          id={TabId.avgResponseDelay}\n          title={intl.formatMessage(messages.avgResponseDelayTitle)}\n          icon={faClock}\n          onClick={setSelectedTabId}\n        />\n        <Tab\n          isSelected={TabId.lastQueueSize === selectedTabId}\n          id={TabId.lastQueueSize}\n          title={intl.formatMessage(messages.lastQueueSizeTitle)}\n          icon={faWaveSquare}\n          onClick={setSelectedTabId}\n        />\n        <Tab\n          isSelected={TabId.avgPayloadSize === selectedTabId}\n          id={TabId.avgPayloadSize}\n          title={intl.formatMessage(messages.avgPayloadSizeTitle)}\n          icon={faDatabase}\n          onClick={setSelectedTabId}\n        />\n        <Tab\n          isSelected={TabId.deadLetterQueue === selectedTabId}\n          id={TabId.deadLetterQueue}\n          title={intl.formatMessage(messages.deadLetterQueueTitle)}\n          icon={faFile}\n          onClick={setSelectedTabId}\n        />\n      </Tabs>\n      <TabPanel />\n    </div>\n  );\n};\n\nexport default memo(ChartsWidget);\n","import React, { memo } from 'react';\nimport { defineMessage, useIntl } from 'react-intl';\nimport { faSortDown } from '@fortawesome/free-solid-svg-icons';\n\nimport InfoCard, { InfoCardVariant } from '../../components/InfoCard';\nimport Text, { TextColor } from '../../components/Text';\nimport styles from './AlertsWidget.module.scss';\n\nconst messages = defineMessage({\n  alertsTitle: {\n    id: 'alertsWidget.alertsTitle',\n    defaultMessage: 'Alerts',\n  },\n  executionTime: {\n    id: 'alertsWidget.executionTime',\n    defaultMessage: 'Execution time',\n  },\n});\n\nconst cards = [\n  {\n    id: 1,\n    title: 'Incedent #41288',\n    subtitle: 'duration (in ms) was above 1 on avarage during the last minute',\n    date: Date.now(),\n  },\n  {\n    id: 2,\n    title: 'Incedent #41289',\n    subtitle: 'duration (in ms) was above 1 on avarage during the last minute',\n    date: Date.now(),\n  },\n];\n\nconst AlertsWidget: React.FC<{}> = () => {\n  const intl = useIntl();\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.title}>\n        <Text uppercase color={TextColor.secondary}>\n          {intl.formatMessage(messages.alertsTitle)}\n        </Text>\n        <Text iconRight={faSortDown} color={TextColor.secondary}>\n          {intl.formatMessage(messages.executionTime)}\n        </Text>\n      </div>\n      <div>\n        {cards.map((card) => (\n          <div key={card.id} className={styles.cardContainer}>\n            <InfoCard\n              variant={InfoCardVariant.alert}\n              title={card.title}\n              subtitle={card.subtitle}\n              date={card.date}\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(AlertsWidget);\n","import React, { memo } from 'react';\n\nimport styles from './Tabs.module.scss';\n\ninterface TabsProps {\n  children: React.ReactNode;\n}\n\nconst Tabs: React.FC<TabsProps> = ({ children }) => {\n  return <div className={styles.tabs}>{children}</div>;\n};\n\nexport default memo(Tabs);\n","import React, { memo, useCallback } from 'react';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport clsx from 'clsx';\n\nimport Text, { TextColor, TextSize } from '../Text';\nimport styles from './Tabs.module.scss';\n\ninterface TabProps {\n  id: string;\n  title: string;\n  icon: IconProp;\n  isSelected?: boolean;\n  onClick: (id: string) => void;\n}\n\nconst Tab: React.FC<TabProps> = ({ id, title, icon, isSelected, onClick }) => {\n  const handleClick = useCallback(() => {\n    onClick(id);\n  }, [id, onClick]);\n\n  return (\n    <div\n      className={clsx(styles.tab, { [styles.selectedTab]: isSelected })}\n      onClick={handleClick}\n    >\n      <div className={styles.tabContent}>\n        <div className={styles.tabContentHeader}>\n          <Text uppercase color={TextColor.secondary} size={TextSize.small}>\n            {title}\n          </Text>\n          <FontAwesomeIcon\n            className={styles.userIcon}\n            icon={icon}\n            color=\"inherit\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Tab);\n","import React, { memo } from 'react';\n\nimport styles from './Tabs.module.scss';\n\nconst TabPanel: React.FC<{}> = () => {\n  return <div className={styles.tabPanel}></div>;\n};\n\nexport default memo(TabPanel);\n","import React, { memo } from 'react';\nimport { defineMessage, useIntl } from 'react-intl';\nimport { faSortDown } from '@fortawesome/free-solid-svg-icons';\n\nimport InfoCard, { InfoCardVariant } from '../../components/InfoCard';\nimport Text, { TextColor } from '../../components/Text';\nimport styles from './InsightsWidget.module.scss';\n\nconst messages = defineMessage({\n  insightsTitle: {\n    id: 'insightsWidget.insightsTitle',\n    defaultMessage: 'Insights',\n  },\n  executionTime: {\n    id: 'insightsWidget.executionTime',\n    defaultMessage: 'Execution time',\n  },\n});\n\nconst cards = [\n  {\n    id: 1,\n    title: 'Queue is growing',\n    subtitle: 'duration (in ms) was above 1 on avarage during the last minute',\n    date: Date.now(),\n  },\n  {\n    id: 2,\n    title: 'Queue is growing',\n    subtitle: 'duration (in ms) was above 1 on avarage during the last minute',\n    date: Date.now(),\n  },\n  {\n    id: 3,\n    title: 'Queue is growing',\n    subtitle: 'duration (in ms) was above 1 on avarage during the last minute',\n    date: Date.now(),\n  },\n];\n\nconst InsightsWidget: React.FC<{}> = () => {\n  const intl = useIntl();\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.title}>\n        <Text uppercase color={TextColor.secondary}>\n          {intl.formatMessage(messages.insightsTitle)}\n        </Text>\n        <Text iconRight={faSortDown} color={TextColor.secondary}>\n          {intl.formatMessage(messages.executionTime)}\n        </Text>\n      </div>\n      <div>\n        {cards.map((card) => (\n          <div key={card.id} className={styles.cardContainer}>\n            <InfoCard\n              variant={InfoCardVariant.insight}\n              title={card.title}\n              subtitle={card.subtitle}\n              date={card.date}\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(InsightsWidget);\n","import React, { memo } from 'react';\nimport { defineMessage, useIntl } from 'react-intl';\nimport { faSortDown } from '@fortawesome/free-solid-svg-icons';\n\nimport InfoCard, { InfoCardVariant } from '../../components/InfoCard';\nimport Text, { TextColor } from '../../components/Text';\nimport styles from './ResourcesWidget.module.scss';\n\nconst messages = defineMessage({\n  resourcesTitle: {\n    id: 'resourcesWidget.resourceTitle',\n    defaultMessage: 'Resources',\n  },\n  executionTime: {\n    id: 'resourcesWidget.executionTime',\n    defaultMessage: 'Execution time',\n  },\n});\n\nconst cards = [\n  {\n    id: 1,\n    title: 'usage-service-prod-recird-inventory-usage-on-two-lines',\n    subtitle: '125ms',\n  },\n  {\n    id: 2,\n    title: 'usage-service-prod-recird-inventory-usage',\n    subtitle: '125ms',\n  },\n  {\n    id: 3,\n    title: 'usage-service-prod-recird-inventory-usage',\n    subtitle: '125ms',\n  },\n];\n\nconst ResourcesWidget: React.FC<{}> = () => {\n  const intl = useIntl();\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.title}>\n        <Text uppercase color={TextColor.secondary}>\n          {intl.formatMessage(messages.resourcesTitle)}\n        </Text>\n        <Text iconRight={faSortDown} color={TextColor.secondary}>\n          {intl.formatMessage(messages.executionTime)}\n        </Text>\n      </div>\n      <div>\n        {cards.map((card) => (\n          <div key={card.id} className={styles.cardContainer}>\n            <InfoCard\n              variant={InfoCardVariant.resource}\n              title={card.title}\n              subtitle={card.subtitle}\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ResourcesWidget);\n","import React from 'react';\n\nimport styles from './App.module.scss';\nimport AlertTitle from './components/DashboardTitle';\nimport HeaderBar from './components/HeaderBar';\nimport NavigationBar from './components/NavigationBar';\nimport AlertsWidget from './widgets/AlertsWidget';\nimport ChartsWidget from './widgets/ChartsWidget';\nimport InsightsWidget from './widgets/InsightsWidget';\nimport ResourcesWidget from './widgets/ResourcesWidget';\n\nconst App: React.FC<{}> = () => {\n  return (\n    <div data-testid=\"app-root\">\n      <HeaderBar />\n      <main className={styles.content}>\n        <div className={styles.space3} />\n        <NavigationBar />\n        <AlertTitle />\n        <div className={styles.space2} />\n        <ChartsWidget />\n        <div className={styles.space1} />\n        <div className={styles.widgets}>\n          <div className={styles.spaceToRight}>\n            <ResourcesWidget />\n          </div>\n          <div className={styles.spaceToRight}>\n            <InsightsWidget />\n          </div>\n          <AlertsWidget />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { IntlProvider } from 'react-intl';\n\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <IntlProvider locale=\"en\">\n      <App />\n    </IntlProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}